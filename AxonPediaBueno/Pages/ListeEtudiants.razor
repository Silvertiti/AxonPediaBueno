@page "/liste-etudiants"
@using AxonPediaBueno.Models
@using AxonPediaBueno.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms
@inject ApplicationDbContext DbContext

<h3>Liste des Étudiants</h3>

<style>
    body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f7f7f7;
    }

    h3 {
        margin-top: 1rem;
        color: #333;
    }

    table.table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

        table.table thead th {
            background-color: #007bff;
            color: #fff;
            text-align: left;
            padding: 0.75rem;
        }

        table.table tbody td {
            padding: 0.75rem;
            border-top: 1px solid #dee2e6;
        }

        table.table tbody tr:hover {
            background-color: #f1f1f1;
        }

    .action-buttons > button {
        margin-right: 5px;
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        font-weight: 600;
        color: #555;
    }

    input.form-control,
    textarea.form-control {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 0.5rem;
        font-size: 1rem;
    }

        input.form-control:focus,
        textarea.form-control:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .encadre {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 1rem;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        margin-bottom: 1rem;
    }

    .mt-2 {
        margin-top: 10px;
    }

    .btn {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #0069d9;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: #fff;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    .btn-danger {
        background-color: #dc3545;
        border: none;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .btn-info {
        background-color: #17a2b8;
        border: none;
        color: #fff;
    }

        .btn-info:hover {
            background-color: #138496;
        }
</style>

@if (etudiants is null)
{
    <p>Chargement...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Prénom</th>
                <th>Nom</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var etudiant in etudiants)
            {
                <tr>
                    <td>@etudiant.Id</td>
                    <td>@etudiant.Prenom</td>
                    <td>@etudiant.Nom</td>
                    <td>@etudiant.Email</td>
                    <td class="action-buttons">
                        <button type="button" class="btn btn-primary" onclick="window.location.href='@($"/etudiant-details/{etudiant.Id}")'">
                            Détails
                        </button>
                        <button type="button" class="btn btn-danger"
                                @onclick="async () => await SupprimerEtudiant(etudiant.Id)">
                            Supprimer
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<hr />

<h3>Ajouter un nouvel étudiant</h3>
<div class="encadre">
    <EditForm Model="newEtudiant" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="Prenom">Prénom :</label>
            <InputText id="Prenom" class="form-control" @bind-Value="newEtudiant.Prenom" />
        </div>

        <div class="form-group">
            <label for="Nom">Nom :</label>
            <InputText id="Nom" class="form-control" @bind-Value="newEtudiant.Nom" />
        </div>

        <div class="form-group">
            <label for="Email">Email :</label>
            <InputText id="Email" class="form-control" @bind-Value="newEtudiant.Email" />
        </div>
        <button type="submit" class="btn btn-primary">Envoyer</button>
    </EditForm>
</div>

@code {
    private List<Etudiant>? etudiants;
    private Etudiant newEtudiant = new Etudiant();

    protected override async Task OnInitializedAsync()
    {
        etudiants = await DbContext.Etudiants.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Etudiants.Add(newEtudiant);
        await DbContext.SaveChangesAsync();
        etudiants = await DbContext.Etudiants.ToListAsync();
        newEtudiant = new Etudiant();
    }

    private async Task SupprimerEtudiant(int id)
    {
        Console.WriteLine($"Tentative de suppression de l'étudiant avec l'ID: {id}");
        var etudiantToDelete = await DbContext.Etudiants.FindAsync(id);
        if (etudiantToDelete != null)
        {
            DbContext.Etudiants.Remove(etudiantToDelete);
            await DbContext.SaveChangesAsync();
            etudiants = await DbContext.Etudiants.ToListAsync();
            StateHasChanged();
            Console.WriteLine("Suppression effectuée et liste actualisée");
        }
        else
        {
            Console.WriteLine("Aucun étudiant trouvé pour cet ID");
        }
    }
}
