@page "/liste-etudiants"
@using AxonPediaBueno.Models
@using AxonPediaBueno.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms
@inject ApplicationDbContext DbContext

<h3>Liste des Étudiants</h3>

<style>
    .form-group {
        margin-bottom: 10px;
    }
</style>

@if (etudiants is null)
{
    <p>Chargement...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Prénom</th>
                <th>Nom</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var etudiant in etudiants)
            {
                <tr>
                    <td>@etudiant.Id</td>
                    <td>@etudiant.Prenom</td>
                    <td>@etudiant.Nom</td>
                    <td>@etudiant.Email</td>
                    <td>
                        <!-- Bouton cliquable redirigeant vers la page de détails -->
                        <button type="button" onclick="window.location.href='@($"/etudiant-details/{etudiant.Id}")'">
                            Détails
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<hr />

<h3>Ajouter un nouvel étudiant</h3>
<EditForm Model="newEtudiant" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Prenom">Prénom :</label>
        <InputText id="Prenom" class="form-control" @bind-Value="newEtudiant.Prenom" />
    </div>

    <div class="form-group">
        <label for="Nom">Nom :</label>
        <InputText id="Nom" class="form-control" @bind-Value="newEtudiant.Nom" />
    </div>

    <div class="form-group">
        <label for="Email">Email :</label>
        <InputText id="Email" class="form-control" @bind-Value="newEtudiant.Email" />
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Envoyer</button>
</EditForm>

@code {
    private List<Etudiant>? etudiants;
    private Etudiant newEtudiant = new Etudiant();

    protected override async Task OnInitializedAsync()
    {
        etudiants = await DbContext.Etudiants.ToListAsync();
    }

    private async Task HandleValidSubmit()
    {
        DbContext.Etudiants.Add(newEtudiant);
        await DbContext.SaveChangesAsync();
        etudiants = await DbContext.Etudiants.ToListAsync();
        newEtudiant = new Etudiant();
    }
}
